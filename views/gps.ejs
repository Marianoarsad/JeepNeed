<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GPS</title>

    <link rel="stylesheet" href="styles/index.css">
    
    <!-- Leaflet css -->
    <link 
        rel="stylesheet" 
        href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossorigin=""
    />

    <!-- Leaflet routing machine css -->
    <link 
        rel="stylesheet" 
        href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" 
    />
</head>
<body>
    <!-- Map Container -->
    <div id="map" ></div>
    
    <!-- Javascript -->

    <!--Leaflet script-->
    <script 
        src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin="">
    </script>

    <!-- Leaflet routing machine js -->
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

    <script>

        function sucess() {
            
            // PASSENGER ICON
            var passengerIcon = L.icon({
                iconUrl: "images/person-icon.png",
                iconSize: [35, 35]
            })

            var passenger = L.marker([14.6295,  121.0418], {icon: passengerIcon}).addTo(map);

            // PASSENGER CIRCLE
            var passengerRadius = L.circle([14.6295,  121.0418], {
                stroke: false,
                fillColor: '#FAA300',
                fillOpacity: 0.06,
                radius: 30
            }).addTo(map);
        
            passengerRadius.bindPopup("I am infont of CIIT Campus.");

        }

        // Error Handler
        function error (error) {
            throw new Error('Your browser is not compatible.');
        }

        // Map Initialize
        navigator.geolocation.watchPosition(sucess, error);

        // JEEPNEY ICON üöö
        const jeepneyIcon = L.icon({
            iconUrl: "images/jeepney-icon.png",
            iconSize: [35, 35],
        })

        // ORIGIN ICON üìç
        const originIcon = L.icon({
            iconUrl: "images/origin-icon.png",
            iconSize: [40, 40]
        })

        // DESTINATION ICON üìç
        const destinationIcon = L.icon({
            iconUrl: "images/destination-icon.png",
            iconSize: [40, 40]
        })

        // MAP LAYER üó∫Ô∏è
        var map = L.map('map', {
            zoomControl: false
        }).setView([
            14.6295,  
            121.0418
        ], 20);

        L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png', {
            maxZoom: 20,
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>'
        }).addTo(map);

        // Jeepney routes
        var ciitToAteneo = L.marker([14.6295, 121.0418], { icon: jeepneyIcon }).addTo(map); // Jeepney Marker
        ciitToAteneo.bindPopup(`<b>aklsndklasndklasndlnasdklnaskldnklasndklalsndklnasdlnaskldnklasndklanskdlnaskldnlasndlansldk</b><button>Get ride.</button>`); // Popup

        // ROUTES
        L.Routing.control({
            waypoints: [
                null
            ],
            plan: L.Routing.plan([
                // PROJECT 2-3
                L.latLng(14.633032939049171, 121.01702489256556),
                L.latLng(14.636197737903148, 121.02919736200919),
                L.latLng(14.627772665780878, 121.03539908600466),
                L.latLng(14.634152037467478, 121.05895033389389),
                L.latLng(14.628929938956487, 121.06475481553743)
            ], {
                // ORIGIN - DESTINATION ICON PLACEMENT
                createMarker: function(i, wp, nWps) {

                    console.log("i: " + i);
                    console.log("wp: " + JSON.stringify(wp));
                    console.log("nWps: " + nWps);

                    if (i === 0) {
                        return L.marker(wp.latLng, {icon: originIcon });
                    }

                    if (i === 4) {
                        return L.marker(wp.latLng, {icon: destinationIcon });
                    } 
                }
            }),
            // LINE PATH
            lineOptions: {
                addWaypoints: false,
                styles: [{ color: '#59D5E0', 
                opacity: 0.8, 
                weight: 5 
                }]
            },
        }).on('routesfound', (e) => {
            const distance = e.routes[0].summary.totalDistance;
            const time = e.routes[0].summary.totalTime;

            console.log("\nTotal Distance: " + distance);
            console.log("Total Time: " + time + "\n");

            let coordinates = [...e.routes[0].coordinates];

            function setPosition (jeep, {lat, lng}, i, coordinates) {

                setTimeout( function () {

                    jeep.setLatLng([lat, lng]);

                    // ARRIVED CONDITION
                    if (i === coordinates.length - 1 ) {
                        console.log('*** Jeepney has arrived to the destination! ***');

                    }

                }, 900 * i);
                
            }

            for (let i = 0; i < coordinates.length; i++) {

                setPosition(ciitToAteneo, coordinates[i], i, coordinates);

            }

        }).addTo(map);
       
    </script>
</body>
</html>

<!-- TODO: MAKE JEEPNEY STOP WHEN PASSENGER IS NEAR. -->

<!-- TODO: MAKE JEEPNEY GO BACK TO ORIGIN. -->
